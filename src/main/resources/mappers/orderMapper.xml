<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.icia.wapoo.dao.OrderDao">
    <insert id="insertOrder" useGeneratedKeys="true" keyProperty="orderId" parameterType="Map">
        INSERT INTO `order`
        SET `orderDate` = NOW(),
            requests = #{orderRequest},
            totalPrice = #{totalPrice},
            discount = #{discount},
            payment = 0,
            address= #{address},
            phone = #{phone},
            member_id = #{memberId}
    </insert>
    <insert id="insertOrderInfo">
        INSERT INTO `orderInfo`
        SET `order_id` = #{orderId},
            `food_id` = #{foodId},
            `quantity` = #{quantity}
    </insert>

    <select id="selectPriceByFoodId" resultType="int">
        SELECT price
        FROM food
        WHERE foodId = #{foodId};
    </select>

    <insert id="insertPayment" parameterType="Payment">
        INSERT INTO payment
        SET payDate = NOW(),
            payMethod = #{payMethod},
            payAmount = #{payAmount},
            aid = #{aid},
            tid = #{tid},
            order_id = #{order_id}
    </insert>

    <update id="updateOrderState">
        UPDATE `order`
        SET `status` = #{status}
        WHERE orderId = #{orderId};
    </update>

    <update id="updateOrderPayment">
        UPDATE `order`
        SET payment = #{total}
        WHERE orderId = #{order_id};
    </update>

    <update id="updateOrderInfosStatus">
        UPDATE `orderInfo`
        SET `status` = #{status}
        WHERE order_id = #{order_id};
    </update>

    <select id="selectOrderByOrderId" resultType="Map">
        SELECT *
        FROM `order`
        WHERE orderId = #{orderId}
    </select>

    <select id="selectAllOrderedFoodByOrderId" resultType="Map">
        SELECT
            i.food_id foodId,
            i.quantity,
            i.status paySuccess,
            f.name,
            f.description,
            f.status foodStatus,
            f.store_id,
            f.price,
            ff.name fileUrl
        FROM `orderInfo` i, food f, food_file ff
        WHERE i.food_id= f.foodId
          AND ff.food_id = f.foodId
          AND i.order_id = #{order_id}
    </select>

    <select id="selectFoodnameByFoodId" resultType="String">
        SELECT name
        FROM food
        where foodId=#{foodId}
    </select>

    <select id="selectCouponByEventId" resultType="Coupon">
        SELECT *
        FROM coupon
        WHERE event_id = #{eventId}
    </select>
    
    
<!-- 주문표 -->
<select id="storeOrder" resultType="StoreOrder">
SELECT	a.name AS 'name',
	a.store_id AS 'storeId',
	a.price AS 'price',
	b.quantity AS 'quantity',
	b.status AS 'status',
	b.orderDate AS 'orderDate',
	b.totalPrice AS 'totalPrice',
	b.discount AS 'discount',
	b.payment AS 'payment',
	b.address AS 'address',
	b.phone AS 'phone',
	b.requests AS 'requests',
	b.orderId AS 'orderId',
	b.orderInfoId AS 'orderInfoId'
	
FROM	food a, (SELECT	a.food_id AS 'foodId',
	a.quantity AS 'quantity',
	a.status AS 'status',
	b.orderDate AS 'orderDate',
	b.totalPrice AS 'totalPrice',
	b.discount AS 'discount',
	b.payment AS 'payment',
	a.order_id AS 'orderId',
	b.address AS 'address',
	b.phone AS 'phone',
	b.requests AS 'requests',
	a.orderInfoId AS 'orderInfoId'
	
	
	FROM	orderInfo a, `order` b
	WHERE	a.order_id = b.orderId) b
WHERE	b.foodId = a.foodId
AND	a.store_id = #{storeId}

AND b.status = #{status}



</select>

<!-- 가게별 주문 총합 -->
<select id="getTotalOrder" resultType="int">
SELECT COUNT(DISTINCT a.order_id)
FROM	`orderInfo` a, `food` b
WHERE	a.food_id = b.foodId
AND	a.status = #{status}
AND	b.store_id = #{storeId}

</select>

<!-- 주문 음식 1개 삭제 -->
<update id="deleteOrder">
UPDATE	`orderInfo`
SET	STATUS = 'N'
WHERE	orderInfoId = #{orderInfoId}
</update>

<!-- 주문1건 삭제 -->
<update id="deleteAllOrder">
UPDATE	`orderInfo`
SET	STATUS = 'N'
WHERE	order_id = #{orderId}
</update>

<!-- 전체 주문 승인 -->
<update id="approveOrder">
UPDATE	`orderInfo`
SET	STATUS = 'Y'
WHERE	order_id = #{orderId}
</update>


    
    
    
</mapper>
