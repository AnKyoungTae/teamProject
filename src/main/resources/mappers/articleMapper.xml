<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.icia.wapoo.dao.ArticleDao">

<!-- 글 조회 -->
<select id="boardSelect" parameterType="long" resultType="Article">
SELECT	IFNULL(articleId, '') AS articleId,
	IFNULL(regDate, '') AS regDate,
	IFNULL(updateDate, '') AS updateDate,
	IFNULL(title, '') AS title,
	IFNULL(BODY, '') AS BODY,
	IFNULL(hit, 1) AS hit,
	IFNULL(STATUS, '') AS STATUS,
	IFNULL(parant_id, 0) AS parant_id,
	IFNULL(board_id, 0) AS board_id,
	IFNULL(writer_id, 0) AS writer_id
FROM article
  	WHERE articleId = #{value}
    </select>


<!-- 글 삭제 -->
<delete id="boardDelete" parameterType="Article">
DELETE FROM article
	WHERE articleId = #{value}

</delete>

<!-- 댓글 삭제 parant_id: 모든 댓글 삭제 -->
<delete id="commentDelete" parameterType="Article">
DELETE FROM article
	WHERE parant_id= #{value}
</delete>

<!-- 게시물 보기 -->
<select id="boardList" parameterType="long" resultType="Article">
SELECT A.articleId,
	A.regDate,
	A.updateDate,
	A.title,
	A.BODY,
	A.hit,
	A.STATUS,
	A.children,
	A.parant_id AS patantId,
	A.board_id AS boardId,
	A.writer_id AS writerId,
	B.nickname
	
FROM    `article` A INNER JOIN `member` B
ON A.writer_id = B.memberId

WHERE articleId = #{articleId}
</select>

<!-- 게시물 등록 -->
<insert id="boardInsert" useGeneratedKeys="true" keyProperty="articleId" parameterType="Article">
INSERT INTO article(
	regDate,
	updateDate,
	title,
	BODY,
	hit,
	STATUS,
	board_id,
	writer_id)
VALUES (
	NOW(),
	NOW(),
	#{title},
	#{body},
	0,
	#{status},
	#{boardId},
	#{writerId}

)
</insert>


<!-- 댓글 등록 -->
<insert id="commentInsert" useGeneratedKeys="true" keyProperty="articleId" parameterType="Article">
INSERT INTO article(
	regDate,
	updateDate,
	title,
	BODY,
	hit,
	parant_id,
	board_id,
	writer_id)
VALUES (
	NOW(),
	NOW(),
	#{title},
	'',
	0,
	#{parantId},
	4,
	#{writerId}
)
</insert>
	
<!-- 게시물 조회수 증가 -->
<update id="boardHit" parameterType="int">
UPDATE article
	SET hit = hit + 1
WHERE articleId = #{articleId}
</update>

<!-- 게시물 댓글 수 증가 -->
<update id="childrenHit" parameterType="Article">
UPDATE article
	SET children = children + 1
WHERE articleId = #{articleId}

</update>

<!-- 페이징 처리 -->
<select id="getBoardList" resultType="Article">
SELECT A.articleId,
	A.regDate,
	A.updateDate,
	A.title,
	A.BODY,
	A.hit,
	A.STATUS,
	A.children,
	A.board_id AS boardId,
	A.writer_id AS writerId,
	B.nickname
	
FROM    `article` A INNER JOIN `member` B
ON A.writer_id = B.memberId

WHERE	board_id = #{boardId}

ORDER BY A.articleId DESC

LIMIT #{paging.startList}, #{paging.listSize}

</select>
<!-- 전체 페이지 수 -->
<select id="getBoardListCnt" resultType="int">
SELECT

	COUNT(*) AS totalPage

FROM
	article
WHERE	
	board_id = #{boardId}

</select>


<!-- 게시글 업데이트 -->
<update id="boardUpadte" parameterType="Article" >
UPDATE article

SET	`updateDate` = NOW(),
	`title` = #{title},
	`body` = #{body}

WHERE articleId = #{articleId};


</update>
<!-- 댓글 조회 -->
<select id="commentList"  resultType="Article">
SELECT A.articleId,
	A.regDate,
	A.updateDate,
	A.title,
	A.BODY,
	A.hit,
	A.STATUS,
	A.children,
	A.parant_id AS patantId,
	A.board_id AS boardId,
	A.writer_id AS writerId,
	B.nickname
	
FROM    `article` A INNER JOIN `member` B
ON A.writer_id = B.memberId

WHERE parant_id = #{parantId}
ORDER BY articleId DESC
</select>



	
	
	
</mapper>