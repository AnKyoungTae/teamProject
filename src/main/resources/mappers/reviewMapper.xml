<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.icia.wapoo.dao.ReviewDao">
	

    <insert id="insertReview" useGeneratedKeys="true" keyColumn="reviewId" keyProperty="reviewId" parameterType="Review">
        INSERT INTO `review`
        SET
        regDate = NOW(),
        updateDate = NOW(),
        status = 'Y',
        score = #{score},
        body = #{body},
        writerid = #{writerid},
        store_id = #{store_id}
        <if test="foodPhoto!=null">
            ,foodPhoto = #{foodPhoto}
        </if>

    </insert>

    <select id="selectReviewList" resultType="Map">
        SELECT r.reviewId
               ,r.regDate
            ,r.updateDate
            ,r.status
            ,r.score
            ,r.body
            ,r.foodPhoto
            ,r.reply
             ,r.writerid
            ,m.nickname
        FROM review r, `member` m
        WHERE r.writerid =  m.memberId
        AND r.status != 'N'
        AND r.store_id = #{storeId}

        <if test="option.equals('score')">
            ORDER BY r.score DESC
        </if>
        <if test="option.equals('recent')">
            ORDER BY r.regDate DESC
        </if>
        LIMIT #{startLimit}, #{endLimit}
    </select>
    <select id="selectReviewListCount" resultType="int">
        SELECT COUNT(*) AS result
        FROM review
        WHERE store_id = #{storeId}
        AND status != 'N'
    </select>
    <select id="selectAverageScore" resultType="float">
        SELECT IFNULL(ROUND(AVG(score),1), -1)
        FROM review
        WHERE store_id = #{storeId}
        AND status != 'N'
    </select>
    <select id="selectReviewListHasReplyCount" resultType="int">
        SELECT COUNT(*) AS result
        FROM review
        WHERE store_id = #{storeId}
        AND reply IS NOT NULL
        AND status != 'N'
    </select>

    <update id="updateReviewAddReply">
        update review
        SET reply = #{reply}
        where reviewId = #{reviewId}
    </update>
    <update id="updateReviewStatus">
        update review
        SET status = #{status}
        where reviewid = #{reviewId}
    </update>
    
</mapper>
